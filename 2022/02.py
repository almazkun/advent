test_ = """A Y
B X
C Z"""

input_ = """A Y
B Y
B Z
B Z
B X
B Z
C Y
A Z
C X
C X
B Z
B Z
B Z
A X
B Z
B Z
A Y
B Z
A Z
B X
B Z
A X
A X
B Z
A Y
A Z
B Z
A Y
A Z
B Z
A Z
B Z
B Z
C Y
B Z
B Z
A X
C X
B Z
A X
B Z
C X
A X
B Z
A X
A X
C X
B Z
B Z
B Z
C Y
C Y
A X
B Z
C X
B Z
A X
A Y
B Z
B Z
B Z
B Z
B Z
B X
B Z
B Z
B Z
B X
A X
A X
B Z
A Y
C Y
C Y
A Y
A X
B Z
A Y
A Z
A X
A X
A Y
C Y
B Z
B Z
C X
B Z
A Y
A X
B Z
B Z
A X
A X
A X
B Z
A Y
B Z
A Z
C Y
B Z
B Z
B Z
C Y
A Y
C Y
B Z
A X
B Z
A X
B Z
C Y
B Z
B Z
B Z
C X
B Z
A X
B Z
B Z
B Z
A X
A X
B X
C Y
B Z
B Z
B Z
A X
B Z
A X
B Z
A X
A Z
A X
B Z
A X
C Y
A X
B Z
A X
C Y
B Z
B Z
A X
A X
B Z
C Y
B Y
B Z
B Z
B Z
B X
B Z
B Z
B Z
A X
B Z
C Y
C Y
A Z
A X
B Z
B Z
B Y
B Z
B Z
C Y
B Z
B Y
B Z
C Y
B Z
B Z
C X
C X
C X
B Z
A Z
A X
C Y
A Z
B Z
B Z
B Z
B Z
A X
A X
B Z
B Z
A Z
A X
A X
B Z
C Y
A X
A Z
A Y
A Y
A X
B Z
A X
A Z
B Z
C X
B Z
C X
C Y
B Z
B Z
B Z
B Z
B Z
C Y
A X
C Y
A X
B Y
B Y
A X
A X
B Z
B Z
C X
A Z
C Y
A X
A X
A Y
A X
A X
B Z
A Z
B Z
B Z
B Z
A Z
A X
B Z
B Z
C Y
B Z
B Z
B Z
A X
A X
B Z
B Z
B Z
B Z
B Z
B Z
A X
C X
A X
A X
C Y
A X
B Z
C Y
B Z
B Z
B Z
A X
B Z
C Y
B Z
A X
A X
B Z
A X
A X
B Z
A Z
B X
A X
A X
B Z
C Y
A Y
A X
C X
B Z
A X
B Z
B Z
A X
B Z
A Z
C Y
B Z
B Z
A X
A X
B X
A X
B Z
B Z
C X
A X
C X
A X
B Z
B Z
A X
A Z
B Z
B X
A X
A Y
B Z
B Z
B Z
C X
C Y
B Z
B Z
C Z
B X
C Y
C Z
B Z
B Z
A X
B Z
C X
B Z
B Z
A Z
A X
C X
B Z
B Z
A X
C Y
A X
B X
C Z
B Z
B Z
A X
B Z
A Y
B Z
B Z
A X
B Z
C Y
C Y
A X
C Y
C X
C X
A X
B Z
C Y
B Z
C X
B Z
A Z
B Z
A Z
B X
B Z
A Z
A X
B Z
B Z
B Z
A X
A X
A X
B Z
A X
B Z
B X
A Y
B Z
A X
B Z
B Z
B Z
A X
B Z
C X
A Y
A X
A Z
C Y
C Y
A X
C Y
B Z
A X
B Z
C Y
B X
A Z
B Z
B Z
B X
B Z
B Z
B Z
A Y
A Y
C Y
A Z
A X
B Z
B Z
A X
A X
A X
B Z
A X
B Z
B Y
A X
A X
A X
B Z
B Z
B Z
C Y
A X
A X
A X
A X
A X
A X
C Y
A Z
C X
B Z
B Z
C Z
A X
A X
B Z
A X
B X
B Z
B Z
C X
B Z
A Z
A X
B Z
A Z
B Z
B Y
A X
C Y
A X
B Z
B Z
B Z
A Z
C Y
C Z
A X
B Z
B Z
B X
A X
B Z
A X
B Z
B Z
C Z
B Z
A X
C Y
C X
A Z
C X
A X
A X
A X
B Z
B Y
C Y
B Z
B Z
C Y
B Z
A X
B Z
A Z
A X
B Z
A Y
A X
A X
B X
B Z
B Z
B Z
B Z
C Z
B Y
A X
A X
B Z
B Z
B Z
C Z
B Z
B Z
A Y
A Z
B Z
A X
C Y
B Z
A Z
C Z
B Z
C X
B Z
B Z
A X
B Z
A X
B Z
C Y
A X
B Z
A Z
B Z
C Y
A X
C X
A X
A X
B Z
B Z
B X
B Z
C X
C Y
A Z
B Z
C Y
B Z
C Y
B Y
A Y
B Z
A X
B Z
A Z
B Z
A X
C X
B Z
B X
C Y
A Z
A X
B Z
B Z
B Z
A Z
C Y
C Y
B Z
A Y
A X
A X
A Y
C Y
A Y
B Z
B Z
B Z
A Z
B Z
A Z
B Z
A X
A Z
B Z
C Y
B Z
A X
A X
A X
A Z
A Z
B Z
C Y
B Z
A X
B Z
B Z
A Z
B Z
B Z
A X
B Z
B Z
B X
A X
B Z
B Z
A Z
A X
B X
A X
B Z
A X
B Z
A X
B Z
C Y
B Z
C Z
C X
B Z
B Z
B Z
C Y
C X
B Z
B Z
B Z
B Z
A Y
A Y
C Y
A X
C X
B X
A X
C X
A Y
B X
A X
A Z
B Z
B X
B Y
B Z
B Z
B X
B Z
C Y
B Z
A X
A X
A X
B Z
A X
B Z
A X
B Z
B Z
B Z
B Z
A X
C Y
A X
B Z
B Z
B Z
A X
B Z
B Z
C Z
A X
A Z
B Z
C Y
B Z
B Z
B Z
B Z
A Z
B Z
B Z
B Z
C Y
A X
B X
C Y
A X
C Z
B Z
C Y
C Y
B Z
A X
B Z
C Z
A X
A Z
B Z
A Z
B Z
B X
B Z
A Z
B Z
C Y
C Z
B Z
A X
B Z
A X
A X
B Z
B Z
B Z
B Z
A X
A Z
A X
B X
B Z
A Y
A Y
B Z
A X
B Z
B Z
A Y
C X
B Z
B Z
B Z
C X
B Z
C X
A X
B Z
C Y
A X
A X
A X
C Z
A X
A X
A Y
B Z
B Z
B Z
B Z
B Z
C X
C Y
B Z
B Z
C X
B Z
B Z
B Z
C Y
C Y
A Z
A X
B Z
A X
B X
B Z
B Z
C Y
B Z
A X
B X
A Z
A Z
B Z
A X
C X
A X
B Z
B Z
B Z
A X
A Z
C X
B Z
A X
A Z
A Z
A Z
A Z
C Y
B X
B X
C Z
B X
C Z
A X
A Y
B Z
B X
A Y
A Z
B X
A X
A X
C Z
A Z
B Z
C X
B Z
B Z
C X
B Z
C X
A X
A Y
A X
B Z
A X
B Z
C Y
B Z
B Z
B Z
B Z
B Z
B Z
B Z
B Z
B Z
A X
B Z
A X
B Z
A Y
B Z
A X
A Z
B Z
C Y
A Z
A X
A Z
C X
B Z
B Z
B Z
A X
C X
C Y
B Z
A Z
A Z
C X
B Z
C Y
A Z
A Z
A Y
B Z
A Z
B Z
B Y
C Y
B Z
B Z
A Z
A X
B Z
C Y
B Z
B Z
B Z
B Z
B Z
A X
C Y
B X
C X
B Z
A Z
B Z
A X
B Z
B Z
A X
C Y
A X
A X
A X
C X
A X
A X
B Z
A Y
A X
B Z
C X
A X
C Z
A X
B Z
C X
A X
A X
A X
B Z
C X
B Z
B Z
A X
A X
A X
A X
B Z
A X
A X
B Z
B X
A Y
A X
C X
A X
C X
A X
B Z
B Z
B Z
B Z
B Z
A X
A X
B X
C Y
A Y
C X
C X
C X
B Z
B Z
B X
B Z
B Z
C X
B Z
B Z
A X
B Z
B Z
B X
A X
A X
C Y
C X
A X
C Y
A Y
C X
B Z
A X
A Z
B Z
B Z
B X
B Z
B Z
B Z
C Y
B X
A X
B Z
A X
B Z
A X
A Z
A Y
C Y
B Z
C Y
A Z
A Z
B Z
A X
A X
C Y
C Y
A X
B Z
A X
C X
C Z
A X
A Y
A X
A X
A X
B Z
B Z
B Z
C Y
B Z
B Z
C Z
A X
B Z
B Z
A X
A X
B Z
B Z
B Z
A Y
B X
A Z
A Z
B Z
A X
B Z
B Y
A Y
A X
C Y
A Z
B Z
C X
C X
A X
B Z
A X
A X
A Z
B Z
A Z
A Z
B Z
B Z
A Y
B Z
C Y
C X
B Z
A X
A X
B Z
B Z
A X
A X
C Y
B Z
A Z
A X
B Z
C Y
B Z
A X
A X
B X
A X
B Z
C Y
B Z
A Y
B Z
B Z
B Z
B X
A X
B Z
C Y
B Z
B Z
B Z
A Z
C Y
C Y
C Y
A X
A Z
A X
B Z
A X
B Z
A X
C Y
B Z
B Z
A X
B Z
A X
A X
B Z
B Z
A X
A X
C X
B Z
A Y
A X
A X
B Z
C Y
C X
C X
B Y
A Z
B Z
A Z
A X
B Z
C Y
B Z
A X
A Z
B Z
A X
A Y
A X
B Z
B Z
B Y
B Z
A X
B Z
B Z
B Z
C Y
A X
B Z
B Z
A X
A X
A X
B Z
A Y
B Z
A Z
A X
B Z
C X
B Z
A X
A Z
A Z
B Z
A X
B Z
B Z
B Z
B Z
C Y
A Y
A Z
A X
A Y
B Z
B Z
B Z
C Y
C Y
B Z
A Y
A Z
A X
B Z
A Z
B Z
A X
C Y
B Z
B Z
B Z
B Z
B Z
C X
A Z
B Z
A Z
B Z
A X
B Z
A X
A Y
B Z
B X
B Z
A Y
B Z
A Z
B Z
B Z
A X
A Z
A Z
B X
B Z
A X
B X
A X
A Z
A X
C X
B Z
C X
A X
C X
A X
A X
A Z
A Z
B Z
A Z
B X
B Z
B Z
A X
B Z
B Z
A X
B Z
B Z
B Z
B Z
B Z
C X
A X
C Y
B Z
B Z
A Y
B X
B Z
A Z
B Z
B Z
C Y
B Z
A X
A Z
B Z
A Z
B Z
B Z
A X
B Z
A Z
A Z
A Z
C X
A Z
B Z
C Y
B Z
A Z
B Z
A X
A X
A X
A Z
A X
B Z
B Z
B Z
B Z
A Y
A X
C Y
C Z
B Z
A Z
A X
B Z
B X
B Z
A X
B Z
B Z
C Y
A X
B Z
B Z
C X
C X
B Z
B Y
A Y
A X
C Y
A X
A X
B Z
B Z
B Z
B Z
A Z
C X
A X
A X
A X
A X
A Y
A Z
A Y
A Y
B Z
A X
A Y
A X
A Z
A Z
A X
B Z
B Z
C Y
A X
B Z
C Y
B Z
B Z
A X
B Z
B X
A X
B Z
A Y
A Y
B X
B Z
B Z
C X
A X
B Z
A X
B X
B Z
A X
B Z
A X
B X
A X
A X
C X
A X
A X
B Z
A X
A X
A Y
B Z
B Z
C Y
B Z
A X
B Z
B Z
A Z
A X
B Z
A Y
B Z
C Y
A Z
A X
A Y
C Y
A X
A Y
C X
B Z
A X
A Y
A X
B Z
A Z
B Z
B Z
C Y
A X
C Y
A Z
B Z
B Z
A X
A X
B X
B Z
C Y
B Z
B Y
A X
B Z
A X
C X
B Z
A Y
A X
B Z
C Y
A Z
B Z
A X
A X
A Y
A Z
C X
B Z
B Z
B Z
A Z
B Z
C Y
B Z
B Z
B Z
B Z
B X
B Z
A X
B Z
B Z
A X
C X
C Y
B Z
B Z
A X
B Z
A X
A X
A Y
B Z
A Z
B Z
C Y
B Z
A X
A Y
C Y
B Y
A Y
A X
C Y
A X
A Z
A X
B Z
A Z
B Z
A X
B Z
C Y
A X
B Z
B X
B Z
A X
A X
A X
B Z
A Z
A Z
B Z
A X
B Z
B Z
A X
A X
B Z
B Z
A X
B Z
B X
B Z
C Y
A Z
B X
A X
B Z
B Z
A X
B Z
A X
B Z
B X
B X
A X
B Z
B Z
B Z
B Z
A Y
B Z
B Z
A X
C X
B Z
B Z
B Z
B Z
B Z
A X
C X
A Y
A X
A X
B Z
C Y
C X
B Z
A X
A Y
B Z
A X
B Z
C Y
B Z
A X
B Z
A Y
B X
A X
B Z
A X
B Z
A X
B Z
A X
C X
C X
A X
B Z
A Y
B Z
B Z
A X
A X
B Z
B Z
B Z
A X
A X
A X
C Y
A Y
B Z
B Z
B Z
B Z
A X
A X
B Z
B Z
C Y
A X
A X
B Z
A X
A Y
A X
B Z
B Z
B Z
A X
B Z
A X
B Z
A X
A X
B Z
A Y
A Z
B Y
A X
A Z
B Z
B Z
A Z
A X
A X
B Z
A X
B Z
A X
C X
A Z
A X
B Z
B Z
A X
A Z
C X
B Z
B Z
A X
B Z
B Z
A X
B Z
B Z
B Z
A Y
A Z
B Z
B Z
A X
B Z
B Z
B X
C X
B Z
B Z
B Z
A X
A X
A Z
B Z
C X
B Y
A Y
B Z
B Z
A X
A X
A Z
B Z
B Z
B Z
A X
A Z
A X
B Z
B Z
A Z
B Z
A Y
A Z
C Y
B Z
B Z
B Z
B Z
A Z
A Z
A Y
B Z
A X
A X
B Z
A Z
B Z
B Z
B X
C Y
B Z
C Y
B Z
A X
C Z
B Z
A X
A X
B Z
A Z
A X
B Z
A Z
A X
C Z
C X
B Z
B Z
B Z
B Z
B Z
C Y
A X
B Z
C Y
A X
B Z
B Z
A Z
A Z
B Z
C Y
A X
C X
B Z
B Z
B Z
B Z
A X
B Z
A X
B Z
A Y
B Z
B Z
B Z
B Z
B Z
C Y
B Z
B Z
A X
A X
A X
A Z
B Z
A Y
C Z
A Z
B Z
B Z
B Z
A X
B X
C Y
C X
C Y
B Z
B Z
B Z
B Z
A Y
B Z
A X
C X
A X
B X
C X
B Z
B Z
A X
A X
C Y
C Y
A X
B Z
C Y
A Y
A Z
A Y
B Z
B Z
B Z
A Y
B Z
A Z
A X
B Z
C X
A Z
B Z
A X
C X
A X
C Y
B X
B Z
B Z
A X
C Y
A X
B Z
C X
A Z
A Y
B Z
A Z
B Z
B Z
B Z
B Z
A X
A X
B Z
A Z
C Y
A Y
A X
A X
B Z
C Z
B Z
A Z
B X
C X
B Z
B Z
A X
A Z
A X
A Z
A X
B Z
B Z
C Y
B Z
B Z
B Z
B Z
A Z
B Z
B X
B Z
B Z
B Z
B Z
C X
C X
A X
B Z
B Z
B Z
B Z
B Z
B Z
A X
C X
B Z
B Z
A Y
B Z
A X
C Y
B Z
C Y
B Z
A Y
B Z
B Z
B Z
A X
A X
A X
B Z
C Y
B Z
A Z
A Y
A Z
A Y
B Z
A X
B X
B Z
A X
B Z
A Y
A X
B Z
A X
A X
A Y
A Y
A X
A X
A X
B Z
B Z
B Z
A X
B Z
A X
B Z
A X
B Y
B Y
A X
B Z
C X
A Z
C Y
A X
B Z
B Z
B Z
C Y
B X
C Y
B Z
B Z
B Z
A Z
B Z
B Z
B Z
C Y
B Z
B Z
A X
A Z
A Y
C Y
B Z
B Z
A X
B Z
B Z
A X
A X
B Z
B Y
B Z
B Z
A Z
B Z
B Z
A X
B Z
A X
C X
C X
A X
C Y
B Z
B Z
B Z
A X
C Y
B Z
B Z
B Z
B Z
B Z
B Z
B Z
B Z
B Z
B Z
C Y
C X
B Z
B Z
B Z
C Y
A Y
C Y
A X
B X
B Z
A X
C X
B Z
A Z
C X
C X
B Z
B Z
A Z
B Z
B X
B Z
B Z
B Z
A X
C X
B Z
A X
C Y
B Z
B Z
C X
B X
A X
B Z
C X
C X
B Z
B X
A X
B Z
A Y
B Z
A Z
A X
B Z
A X
A X
B Z
B Z
A X
B Z
A X
A X
C Y
B Z
A X
C Y
B Z
B Z
A X
A Y
C Y
B Z
A X
B Z
A X
A X
B Z
B Z
C Y
B Z
A X
A X
A X
A X
A Z
B Z
B Z
C X
C X
B Z
B Z
C Y
B Z
A Y
B Z
A X
C X
A Z
B Z
B Z
B Z
C Y
A X
B Z
B Z
C Y
B Z
C Y
B Z
A Z
B Z
A X
B Z
C Y
C Y
A X
A X
A Z
B Z
C Y
C Y
A X
B Z
B Z
A X
B Z
B Z
B Z
B Z
B X
B Y
A X
B Z
B Z
B Z
C Y
A X
A Y
B Z
A Z
A Z
B X
A X
C Y
B Z
B Z
A Z
B Z
C X
C X
A Z
B Z
A X
B Z
A X
B Z
B Z
B X
A X
A Z
B X
A X
B Z
A X
A X
A Z
A Y
B Z
A Y
C Y
C X
B Z
B Z
A X
A X
B Z
B Z
B Z
A Z
C X
A X
B Z
B Z
A X
B Z
B Z
B Z
A X
A Z
B Z
A X
B Z
A X
B Z
B Z
A X
C Y
A X
C X
A Z
B X
A Y
A Y
B Z
B Z
B Z
A X
A X
A X
A Y
B Z
B Z
B Z
B Z
B Z
B Z
B Z
B Z
C Y
B Z
B Z
B Z
C Y
A X
A Z
B Z
C Y
B Z
A Z
A X
B Z
A Y
B Z
B Z
A Z
B Z
A X
A Z
A Z
B Z
B Z
B Z
B Z
A X
A Z
B Z
B Z
B Z
B Z
A Z
B Z
C X
B Z
B Y
A X
B Z
B Z
A X
B Z
A X
A X
A X
A X
B X
B Z
C X
B Z
B Z
B Z
A X
B Z
C X
B Z
A Z
A X
A X
B Z
B Z
B Z
B Z
C X
A X
B Z
B Z
C Y
B Z
C Y
B Z
B Z
A X
B Z
A X
A Y
B Z
A Z
B Z
B Z
A Y
B Z
B Z
C Y
A X
A X
A X
A X
B Z
B Z
A Y
B Z
A Z
A X
A X
B Z
A Y
B Z
B Z
B X
A Y
A X
A X
C Y
C X
A X
B Z
B Z
B Z
A Y
B Z
C X
C X
C X
B Z
B Z
B Z
B Z
B Z
A X
B Z
A Y
B Z
A Y
C X
B X
B Z
B Z
A X
B X
B Z
B Z
B Z
B Z
B Z
A X
B Z
C X
B X
A X
A X
A X
A X
A X
B Z
C X
C Y
A X
B Z
C X
A Z
B Z
B Z
C Y
A X
A Z
B Z
B Z
B Z
B Z
B Z
B Z
A X
A X
B X
A X
B Z
A X
B Z
B Z
A Z
B Z
B Z
B Z
B Z
C X
B Z
A Z
B Z
B Z
A Z
A X
C X
B X
C X
A X
B Z
A Z
B X
B X
A Z
B Z
B Z
B X
B Z
B Z
C X
A Y
A X
A Z
B Z
A X
B Z
B Z
B Z
B Z
A X
A X
C Y
B Z
B Z
B Z
A Z
C X
C Y
B Y
B Z
B Z
A X
C Y
A Z
B Z
B Z
B Z
B Z
B Z
C X
B Z
A X
C X
A X
A Z
C Y
C X
B Z
B Z
A Y
A Z
A Z
A X
A Z
A Z
C Y
B Z
B Z
B Z
B Z
A Z
A X
A Y
C X
A X
B Z
B Z
B Z
A X
B Z
B Z
A Z
B Z
A X
B Z
A X
A Y
B Z
A X
A Z
B Z
A X
B Z
C X
B Z
B Z
C X
A Y
B Z
A Z
C X
C Z
C X
B Z
B Z
B Z
A X
B Z
C X
A X
A Y
A X
A Z
C Y
A X
B Z
B Z
C Z
A X
B Z
B Z
A X
A Z
B Z
A Y
B Z
C X
A X
A X
B Z
B Z
B Z
B X
C X
B Z
B Z
A X
A X
A Z
B Z
B Z
A Z
C Y
C Z
B Z
A X
A X
A X
C Y
A X
A X
A X
A Z
B Z
A Y
B Z
C X
B Z
A X
C X
B Z
A Y
A X
B Z
B Z
B Z
A X
A Y
B Z
A X
B Z
B Z
B Z
B Z
A X
A X
B Z
C X
B X
A Z
B Z
B Z
B Z
B Z
B Z"""


class Sol:
    def __init__(self, input_: str):
        self.input = input_

    def solve(self):
        print(self.solution)

    @property
    def cleaned(self):
        return [x.split(" ") for x in self.input.split("\n") if x]

    def get_score(self, a):
        """
        A - X - Rock:       1
        B - Y - Paper:      2
        C - Z - Scissors:   3
        """
        score_map = {
            "A": 1, "X": 1,
            "B": 2, "Y": 2,
            "C": 3, "Z": 3,
        }
        return score_map[a]
    
    def get_winner(self, a, b):
        """
        A - X - Rock:       1
        B - Y - Paper:      2
        C - Z - Scissors:   3
        """
        if a == b:
            return 3
        if a == "A" and b == "X":
            return 3
        if a == "B" and b == "Y":
            return 3
        if a == "C" and b == "Z":
            return 3
        
        if a == "A" and b == "Y":
            return 6
        if a == "B" and b == "Z":
            return 6
        if a == "C" and b == "X":
            return 6
        
        if a == "A" and b == "B":
            return 6
        if a == "B" and b == "C":
            return 6
        if a == "C" and b == "A":
            return 6
        
        return 0
    
    def get_result(self, a, b):
        to_win = {
            "A": "B",
            "B": "C",
            "C": "A",
        }
        to_lose = {
            "A": "C",
            "B": "A",
            "C": "B",
        }
        if b == "X":
            return to_lose[a]
        if b == "Y":
            return a
        if b == "Z":
            return to_win[a]
    
    def calc_score(self, a, b):
        return self.get_winner(a, b) + self.get_score(b)

    def p1(self):
        return sum(
            [self.calc_score(x[0], x[1]) for x in self.cleaned]
        )

    def p2(self):
        res = []
    
        for x in self.cleaned:
            a = x[0]
            b = self.get_result(a, x[1])
            res.append(self.calc_score(a, b))

        return sum(res)

    @property
    def solution(self):
        try:
            return f"p1: {self.p1()}\np2: {self.p2()}\n"
        except Exception as e:
            import traceback

            print(f"Error: {e}\n{traceback.format_exc()}")


if __name__ == "__main__":
    try:
        Sol(test_).solve()
    except Exception as e:
        pass
    Sol(input_).solve()
